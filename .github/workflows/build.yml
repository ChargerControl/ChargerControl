name: Build

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
       - dev

jobs:
  build:
    name: Build and analyze
    runs-on: [self-hosted] 

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Start database container
        run: sudo docker-compose up -d mysql-container

      - name: Build and analyze UserAPI
        working-directory: UserApp/Backend/UserApi
        env:
          SONAR_TOKEN: ${{ secrets.USERAPI_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=UserAPI -Dsonar.projectName='UserAPI' -Dsonar.token=${SONAR_TOKEN} -Dsonar.host.url=${SONAR_HOST_URL}

      - name: Authenticate with Xray Cloud (UserAPI)
        id: xray-auth-userapi
        working-directory: UserApp/Backend/UserApi
        run: |
          TOKEN=(curl -s -H "Content-Type: application/json" \
            -X POST \
            --data '{"client_id":"${{ secrets.XRAY_CLIENT_ID }}","client_secret":"${{ secrets.XRAY_CLIENT_SECRET }}"}' \
            "https://xray.cloud.getxray.app/api/v1/authenticate" | tr -d '"')
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Import JUnit results to Xray Cloud (UserAPI)
        working-directory: UserApp/Backend/UserApi
        run: |
          for file in target/surefire-reports/TEST-*.xml
          set -l token ${{ steps.xray-auth-userapi.outputs.token }}
          for file in target/surefire-reports/TEST-*.xml
            curl -H "Content-Type: text/xml" \
              -H "Authorization: Bearer $token" \
              --data-binary @$file \
              "https://xray.cloud.getxray.app/api/v1/import/execution/junit?projectKey=SCRUM"
          end

      - name: Build and analyze OperatorAPI
        working-directory: OperatorApp/Backend/OperatorApi
        env:
          SONAR_TOKEN: ${{ secrets.OPERATORAPI_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=OperatorAPI -Dsonar.projectName='OperatorAPI' -Dsonar.token=${SONAR_TOKEN} -Dsonar.host.url=${SONAR_HOST_URL}

      - name: Authenticate with Xray Cloud (OperatorAPI)
        id: xray-auth-operatorapi
        working-directory: OperatorApp/Backend/OperatorApi
        run: |
          TOKEN=(curl -s -H "Content-Type: application/json" \
            -X POST \
            --data '{"client_id":"${{ secrets.XRAY_CLIENT_ID }}","client_secret":"${{ secrets.XRAY_CLIENT_SECRET }}"}' \
            "https://xray.cloud.getxray.app/api/v1/authenticate" | tr -d '"')
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Import JUnit results to Xray Cloud (OperatorAPI)
        working-directory: OperatorApp/Backend/OperatorApi
        run: |
          set -l token ${{ steps.xray-auth-operatorapi.outputs.token }}
          for file in target/surefire-reports/TEST-*.xml
            curl -H "Content-Type: text/xml" \
              -H "Authorization: Bearer $token" \
              --data-binary @$file \
              "https://xray.cloud.getxray.app/api/v1/import/execution/junit?projectKey=SCRUM"
          end

